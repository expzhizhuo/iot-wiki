{"remainingRequest":"Z:\\文库\\iot-wiki\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!Z:\\文库\\iot-wiki\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!Z:\\文库\\iot-wiki\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!Z:\\文库\\iot-wiki\\node_modules\\vuepress-theme-antdocs\\components\\PageEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"Z:\\文库\\iot-wiki\\node_modules\\vuepress-theme-antdocs\\components\\PageEdit.vue","mtime":1582974783000},{"path":"Z:\\文库\\iot-wiki\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"Z:\\文库\\iot-wiki\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"Z:\\文库\\iot-wiki\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"Z:\\文库\\iot-wiki\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGlzTmlsIGZyb20gJ2xvZGFzaC9pc05pbCc7CmltcG9ydCB7IGVuZGluZ1NsYXNoUkUsIG91dGJvdW5kUkUgfSBmcm9tICcuLi91dGlsJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQYWdlRWRpdCcsCiAgY29tcHV0ZWQ6IHsKICAgIGxhc3RVcGRhdGVkKCkgewogICAgICByZXR1cm4gdGhpcy4kcGFnZS5sYXN0VXBkYXRlZDsKICAgIH0sCgogICAgbGFzdFVwZGF0ZWRUZXh0KCkgewogICAgICBpZiAodHlwZW9mIHRoaXMuJHRoZW1lTG9jYWxlQ29uZmlnLmxhc3RVcGRhdGVkID09PSAnc3RyaW5nJykgewogICAgICAgIHJldHVybiB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5sYXN0VXBkYXRlZDsKICAgICAgfQoKICAgICAgaWYgKHR5cGVvZiB0aGlzLiRzaXRlLnRoZW1lQ29uZmlnLmxhc3RVcGRhdGVkID09PSAnc3RyaW5nJykgewogICAgICAgIHJldHVybiB0aGlzLiRzaXRlLnRoZW1lQ29uZmlnLmxhc3RVcGRhdGVkOwogICAgICB9CgogICAgICByZXR1cm4gJ0xhc3QgVXBkYXRlZCc7CiAgICB9LAoKICAgIGVkaXRMaW5rKCkgewogICAgICBjb25zdCBzaG93RWRpdExpbmsgPSBpc05pbCh0aGlzLiRwYWdlLmZyb250bWF0dGVyLmVkaXRMaW5rKSA/IHRoaXMuJHNpdGUudGhlbWVDb25maWcuZWRpdExpbmtzIDogdGhpcy4kcGFnZS5mcm9udG1hdHRlci5lZGl0TGluazsKICAgICAgY29uc3QgewogICAgICAgIHJlcG8sCiAgICAgICAgZG9jc0RpciA9ICcnLAogICAgICAgIGRvY3NCcmFuY2ggPSAnbWFzdGVyJywKICAgICAgICBkb2NzUmVwbyA9IHJlcG8KICAgICAgfSA9IHRoaXMuJHNpdGUudGhlbWVDb25maWc7CgogICAgICBpZiAoc2hvd0VkaXRMaW5rICYmIGRvY3NSZXBvICYmIHRoaXMuJHBhZ2UucmVsYXRpdmVQYXRoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlRWRpdExpbmsocmVwbywgZG9jc1JlcG8sIGRvY3NEaXIsIGRvY3NCcmFuY2gsIHRoaXMuJHBhZ2UucmVsYXRpdmVQYXRoKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9LAoKICAgIGVkaXRMaW5rVGV4dCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHRoZW1lTG9jYWxlQ29uZmlnLmVkaXRMaW5rVGV4dCB8fCB0aGlzLiRzaXRlLnRoZW1lQ29uZmlnLmVkaXRMaW5rVGV4dCB8fCBgRWRpdCB0aGlzIHBhZ2VgOwogICAgfQoKICB9LAogIG1ldGhvZHM6IHsKICAgIGNyZWF0ZUVkaXRMaW5rKHJlcG8sIGRvY3NSZXBvLCBkb2NzRGlyLCBkb2NzQnJhbmNoLCBwYXRoKSB7CiAgICAgIGNvbnN0IGJpdGJ1Y2tldCA9IC9iaXRidWNrZXQub3JnLzsKCiAgICAgIGlmIChiaXRidWNrZXQudGVzdChyZXBvKSkgewogICAgICAgIGNvbnN0IGJhc2UgPSBvdXRib3VuZFJFLnRlc3QoZG9jc1JlcG8pID8gZG9jc1JlcG8gOiByZXBvOwogICAgICAgIHJldHVybiBiYXNlLnJlcGxhY2UoZW5kaW5nU2xhc2hSRSwgJycpICsgYC9zcmNgICsgYC8ke2RvY3NCcmFuY2h9L2AgKyAoZG9jc0RpciA/IGRvY3NEaXIucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJykgKyAnLycgOiAnJykgKyBwYXRoICsgYD9tb2RlPWVkaXQmc3BhPTAmYXQ9JHtkb2NzQnJhbmNofSZmaWxldmlld2VyPWZpbGUtdmlldy1kZWZhdWx0YDsKICAgICAgfQoKICAgICAgY29uc3QgYmFzZSA9IG91dGJvdW5kUkUudGVzdChkb2NzUmVwbykgPyBkb2NzUmVwbyA6IGBodHRwczovL2dpdGh1Yi5jb20vJHtkb2NzUmVwb31gOwogICAgICByZXR1cm4gYmFzZS5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKSArIGAvZWRpdGAgKyBgLyR7ZG9jc0JyYW5jaH0vYCArIChkb2NzRGlyID8gZG9jc0Rpci5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKSArICcvJyA6ICcnKSArIHBhdGg7CiAgICB9CgogIH0KfTs="},{"version":3,"mappings":"AAyBA;AACA;AAEA;EACAA,gBADA;EAGAC;IACAC;MACA;IACA,CAHA;;IAKAC;MACA;QACA;MACA;;MACA;QACA;MACA;;MACA;IACA,CAbA;;IAeAC;MACA,8DACA,gCADA,GAEA,+BAFA;MAIA;QACAC,IADA;QAEAC,YAFA;QAGAC,qBAHA;QAIAC;MAJA,IAKA,sBALA;;MAOA;QACA,2BACAH,IADA,EAEAG,QAFA,EAGAF,OAHA,EAIAC,UAJA,EAKA,uBALA;MAOA;;MACA;IACA,CArCA;;IAuCAE;MACA,OACA,wCACA,mCADA,IAEA,gBAHA;IAKA;;EA7CA,CAHA;EAmDAC;IACAC;MACA;;MACA;QACA;QACA,OACAC,kCACA,MADA,GAEA,iBAFA,IAGAN,uDAHA,IAIAO,IAJA,GAKA,gEANA;MAQA;;MAEA,yCACAL,QADA,GAEA,gCAFA;MAGA,OACAI,kCACA,OADA,GAEA,iBAFA,IAGAN,uDAHA,IAIAO,IALA;IAOA;;EAzBA;AAnDA","names":["name","computed","lastUpdated","lastUpdatedText","editLink","repo","docsDir","docsBranch","docsRepo","editLinkText","methods","createEditLink","base","path"],"sourceRoot":"node_modules/vuepress-theme-antdocs/components","sources":["PageEdit.vue"],"sourcesContent":["<template>\n  <footer class=\"page-edit\">\n    <div\n      v-if=\"editLink\"\n      class=\"edit-link\"\n    >\n      <a\n        :href=\"editLink\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >{{ editLinkText }}</a>\n      <OutboundLink />\n    </div>\n\n    <div\n      v-if=\"lastUpdated\"\n      class=\"last-updated\"\n    >\n      <span class=\"prefix\">{{ lastUpdatedText }}:</span>\n      <span class=\"time\">{{ lastUpdated }}</span>\n    </div>\n  </footer>\n</template>\n\n<script>\nimport isNil from 'lodash/isNil'\nimport { endingSlashRE, outboundRE } from '../util'\n\nexport default {\n  name: 'PageEdit',\n\n  computed: {\n    lastUpdated () {\n      return this.$page.lastUpdated\n    },\n\n    lastUpdatedText () {\n      if (typeof this.$themeLocaleConfig.lastUpdated === 'string') {\n        return this.$themeLocaleConfig.lastUpdated\n      }\n      if (typeof this.$site.themeConfig.lastUpdated === 'string') {\n        return this.$site.themeConfig.lastUpdated\n      }\n      return 'Last Updated'\n    },\n\n    editLink () {\n      const showEditLink = isNil(this.$page.frontmatter.editLink)\n        ? this.$site.themeConfig.editLinks\n        : this.$page.frontmatter.editLink\n\n      const {\n        repo,\n        docsDir = '',\n        docsBranch = 'master',\n        docsRepo = repo\n      } = this.$site.themeConfig\n\n      if (showEditLink && docsRepo && this.$page.relativePath) {\n        return this.createEditLink(\n          repo,\n          docsRepo,\n          docsDir,\n          docsBranch,\n          this.$page.relativePath\n        )\n      }\n      return null\n    },\n\n    editLinkText () {\n      return (\n        this.$themeLocaleConfig.editLinkText\n        || this.$site.themeConfig.editLinkText\n        || `Edit this page`\n      )\n    }\n  },\n\n  methods: {\n    createEditLink (repo, docsRepo, docsDir, docsBranch, path) {\n      const bitbucket = /bitbucket.org/\n      if (bitbucket.test(repo)) {\n        const base = outboundRE.test(docsRepo) ? docsRepo : repo\n        return (\n          base.replace(endingSlashRE, '')\n          + `/src`\n          + `/${docsBranch}/`\n          + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '')\n          + path\n          + `?mode=edit&spa=0&at=${docsBranch}&fileviewer=file-view-default`\n        )\n      }\n\n      const base = outboundRE.test(docsRepo)\n        ? docsRepo\n        : `https://github.com/${docsRepo}`\n      return (\n        base.replace(endingSlashRE, '')\n        + `/edit`\n        + `/${docsBranch}/`\n        + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '')\n        + path\n      )\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import '../styles/palette.less';\n@import \"../styles/wrapper.less\";\n.page-edit {\n  // @extend @wrapper\n  & {\n    .wrapper;\n  }\n  \n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  overflow: auto;\n\n  .edit-link {\n    display: inline-block;\n\n    a {\n      color: lighten(@textColor, 25%);\n      margin-right: 0.25rem;\n    }\n  }\n\n  .last-updated {\n    float: right;\n    font-size: 0.9em;\n\n    .prefix {\n      font-weight: 500;\n      color: lighten(@textColor, 25%);\n    }\n\n    .time {\n      font-weight: 400;\n      color: #aaa;\n    }\n  }\n}\n\n@media (max-width: @MQMobile) {\n  .page-edit {\n    .edit-link {\n      margin-bottom: 0.5rem;\n    }\n\n    .last-updated {\n      font-size: 0.8em;\n      float: none;\n      text-align: left;\n    }\n  }\n}\n\n</style>\n"]}]}